name: LiteRAG Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Check for security vulnerabilities (RAG API)
      working-directory: ./rag-api
      run: |
        poetry install
        poetry run pip install safety
        poetry run safety check

    - name: Check for security vulnerabilities (Embedding Service)
      working-directory: ./embedding-service
      run: |
        poetry install
        poetry run pip install safety
        poetry run safety check

  docker-security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build RAG API image
      run: docker build -t rag-api:security-test ./rag-api

    - name: Build Embedding Service image
      run: docker build -t embedding-service:security-test ./embedding-service

    - name: Run Trivy vulnerability scanner (RAG API)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'rag-api:security-test'
        format: 'sarif'
        output: 'trivy-rag-api.sarif'

    - name: Run Trivy vulnerability scanner (Embedding Service)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'embedding-service:security-test'
        format: 'sarif'
        output: 'trivy-embedding-service.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-rag-api.sarif'

    - name: Upload Embedding Service scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-embedding-service.sarif'