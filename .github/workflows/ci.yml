name: LiteRAG CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install RAG API dependencies
      working-directory: ./rag-api
      run: poetry install

    - name: Install Embedding Service dependencies
      working-directory: ./embedding-service
      run: poetry install


    - name: Run tests (RAG API)
      working-directory: ./rag-api
      run: poetry run pytest -v --cov=.

    - name: Run tests (Embedding Service)
      working-directory: ./embedding-service
      run: poetry run pytest -v --cov=.

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build RAG API Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./rag-api
        push: false
        tags: rag-api:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build Embedding Service Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./embedding-service
        push: false
        tags: embedding-service:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  integration-test:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Start services with Docker Compose
      run: docker compose up -d

    - name: Wait for services to be ready
      run: |
        timeout 120s bash -c 'until curl -f http://localhost:8000/health; do sleep 2; done'
        timeout 120s bash -c 'until curl -f http://localhost:8001/health; do sleep 2; done'

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install test dependencies
      run: poetry install

    - name: Run integration tests
      run: poetry run python tests/test_rag.py

    - name: Stop services
      run: docker compose down

    - name: Show logs on failure
      if: failure()
      run: docker compose logs